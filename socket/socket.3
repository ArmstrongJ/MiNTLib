.TH socket 3 "MiNT-Net"
.SH NAME
socket \- create an endpoint for communication
.SH SYNOPSIS
.B #include <sys/socket.h>
.PP
.B "int socket(int af, int type, int protocol);"
.SH DESCRIPTION
.I socket
creates an endpoint for communication and returns a descriptor.
The socket descriptor returned is used
in all subsequent socket-related library calls.
.PP
The
.I af
parameter specifies an address family to be used
to interpret addresses in later operations that specify the socket.
These address families are defined in the include file
.RB < sys/socket.h >
The only currently-supported address family is
.IP
.SM AF_UNIX
(path names on a local host)
.PP
The
.I type
specifies the semantics of communication for the socket.
Currently defined types are:
.IP
.SM SOCK_STREAM
.br
.SM SOCK_DGRAM
.PP
A
.SM SOCK_STREAM
type provides sequenced, reliable, two-way-connection-based byte streams.
A
.SM SOCK_DGRAM
socket supports datagrams (connectionless, unreliable messages
of a fixed, typically small, maximum length).
.PP
.I protocol
specifies a particular protocol to be used with the socket.
Normally, only a single protocol exists to support a particular
socket type using a given address family.
However, many protocols may exist,
in which case a particular protocol must be specified.
The protocol number to use depends on the
.I communication domain
in which communication is to take place.
.I protocol
can be supplied as zero,
in which case the system chooses a protocol type to use.
.PP
Sockets of type
.SM SOCK_STREAM
are byte streams similar to pipes
except that they are full-duplex instead of half-duplex.
A stream socket must be in a
.I connected
state before any data can be sent or received on it.
A connection to another socket is created with a
.IR connect (3)
or
.IR accept (3)
call.
Once connected, data can be transferred using some variant of the
.IR send (3)
and
.IR recv (3)
or the
.IR read (3)
and
.IR write (3)
calls.  When a session has been completed, a
.IR close (3)
can be performed.
.PP
A
.SM SIGPIPE
signal is raised if a process sends on a broken stream;
this causes naive processes that do not handle the signal to exit.
An end-of-file condition (zero bytes read) is returned
if a process tries to read on a broken stream.
.PP
.SM SOCK_DGRAM
sockets allow sending of messages to correspondents named in
.IR send (3)
calls.
It is also possible to receive messages at such a socket with
.IR recv (3).
.PP
The operation of sockets is controlled by socket level options set by the
.I setsockopt
library call described
by the
.IR getsockopt (3)
reference page.
These options are defined in the file
.RB < sys/socket.h >
and explained in the
.I getsockopt (3)
reference page.
.SH RETURN VALUE
If the call is successful,
a valid file descriptor referencing the socket is returned.
If it fails, \-1 is returned and an error code is stored in
.BR errno .
.SH DIAGNOSTICS
.I socket
fails if:
.TP 25
.SM [ENOENT]
The socket device driver has not been started.
.TP
.SM [EAFNOSUPPORT]
The specified address family
is not supported.
.TP
.SM [ESOCKTNOSUPPORT]
The specified socket type is not supported in this address family.
.TP
.SM [EPROTONOSUPPORT]
The specified protocol is not supported.
.TP
.SM [EMFILE]
The per-process descriptor table is full.
.TP
.SM [ENOMEM]
No buffer space is available.  The socket cannot be created.
.TP
.SM [EPROTOTYPE]
The type of socket and protocol do not match.
.SH SEE ALSO
accept(3),
bind(3),
connect(3),
getsockname(3),
getsockopt(3),
ioctl(3),
listen(3),
recv(3),
select(3),
send(3),
shutdown(3).
