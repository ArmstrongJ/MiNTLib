.TH connect 3 "MiNT-Net"
.SH NAME
connect \- initiate a connection on a socket
.SH SYNOPSIS
.B  "#include <sys/socket.h>"
.SS \s-1AF_UNIX\s0 only:
.B  "#include <sys/un.h>"
.PP
.B "int connect(int s, struct sockaddr \(**addr, size_t addrlen);"
.SH DESCRIPTION
The parameter
.I s
is a socket descriptor.
.I addr
is a pointer to a socket address structure.
This structure contains the address of a remote socket
to which a connection will be established.
.I addrlen
is the size of this address structure.
Since the size of the socket address structure varies
among socket address families,
the correct socket address structure should be used
with each address family (for example,
.B "struct\ sockaddr_un"
for
.SM AF_UNIX\s0).
Typically, the
.I sizeof
function is used to pass this value (for example,
.BR "sizeof(struct\ sockaddr_un)" ).
.PP
If the socket is of type
.SM SOCK_DGRAM,
.I connect
specifies the peer address to which messages are to be sent,
and the call returns immediately.
Furthermore, this socket can only receive messages
sent from this address.
.PP
If the socket is of type
.SM SOCK_STREAM,
.I connect
attempts to contact the remote host in order to make a connection
between the remote socket (peer) and the local socket specified by
.IR s .
The call normally blocks until the connection completes.
If non-blocking mode has been enabled
using the
.SM O_NDELAY
.I fcntl
flag and the connection cannot be completed immediately,
.I connect
returns an error as described below.
In these cases,
.IR select (3)
can be used on this socket to determine when the
connection has completed by selecting it for writing.
.PP
.SM O_NDELAY
is defined in
.RB < fcntl.h >\s0.
.PP
Generally, stream sockets may successfully connect only once;
datagram sockets may use
.I connect
multiple times to change the peer address.
For datagram sockets, a side effect of attempting to connect to
some invalid address (see
.SM DIAGNOSTICS
below) is that the peer address is no longer maintained by the system.
An example of an invalid address for a datagram socket is
.I addrlen
set to 0 and
.I addr
set to any value.
If you set the address family of the destination socket to
.SM AF_UNSPEC\s0,
this is an invalid address, too.
.SH RETURN VALUE
If the call is successful, 0 is returned.
If it fails, \-1 is returned and an error code is stored in
.BR errno .
.SH DIAGNOSTICS
.I connect
fails if:
.TP 25
.SM [EBADF]
.I s
is not a valid file descriptor.
.TP
.SM [EAFNOSUPPORT]
Addresses in the specified address family cannot be used with this socket.
.IP
For datagram sockets, the peer address is no longer maintained by the system.
.TP
.SM [EALREADY]
Non-blocking
.SM I/O
is enabled using
.SM O_NDELAY
and a previous connection attempt has not yet completed.
.TP
.SM [EISCONN]
The socket is already connected.
.TP
.SM [EINVAL]
The socket has already been shut down, has a
.I listen
active on it or
.I addrlen
is a bad value.
.IP
For datagram sockets, if
.I addrlen
is a bad value, the peer address is no longer maintained by the system.
.I s
is a file descriptor for a file, not a socket.
.TP
.SM [ETIMEDOUT]
Connection establishment timed out without establishing a connection.
.I backlog
may be full (see
.IR listen (3)).
.TP
.SM [ECONNREFUSED]
The attempt to connect was forcefully rejected.
.TP
.SM [EDESTADDRREQ]
.I addr
is a NULL pointer.
.TP
.SM [EINPROGRESS]
Non-blocking
.SM I/O
is enabled using
.SM O_NDELAY
and the connection cannot be completed immediately.
This is not a failure.
Make the
.IR connect (3)
call again a few seconds later.
Alternatively, wait for completion by calling
.IR select (3),
selecting for write.
.TP
.SM [EINTR]
The connect was interrupted by delivery of a signal
before the connect sequence was complete.
The building of the connection still takes place,
even though the user is not blocked on the
.I connect
call.
.TP
.SM [EOPNOTSUPP]
A
.I connect
attempt was made on a socket type which does not support this call.
.SH SEE ALSO
accept(3),
select(3),
socket(3),
getsockname(3).
